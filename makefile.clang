#
# makefile for JyNI
#
# Author: Jonathan Hale, Stefan Richthofer
#

CC = clang
JC = javac
JAVA = java
OUTPUTDIR = ./build

# Adjust the following line to point to Jython 2.7
JYTHON = ./jython.jar
#for instance, if you extracted it to your home folder:
#JYTHON = /home/your_name/jython.jar

# Adjust the two paths below to match your system, if not yet appropriate
PY_INCLUDE = /usr/include/python2.7
JAVA_HOME = /usr/lib/jvm/default-java
#The symlink "default-java" does not exist on every system. If gnumake tells you that the header
#jni.h is missing, please adjust JAVA_HOME appropriately. Example for Java 7, 64 bit:
#JAVA_HOME = /usr/lib/jvm/java-7-openjdk-amd64
PLATFORM = linux

JYNI = ./JyNI-Java/src
JYNIBIN = ./JyNI-Java/bin
INCLUDES = -I./JyNI-C/include -I./JyNI-C/include/Python_JyNI -I./JyNI-Java/include -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/$(PLATFORM) -I$(PY_INCLUDE) -I/usr/include/tcl8.6
CFLAGS = -std=gnu89 -fPIC -Wl,--add-stdcall-alias -c $(INCLUDES)
LDFLAGS = -shared -undefined dynamic_lookup -ltk8.6 -ltcl8.6
# You can optionally remove -source 1.7 -target 1.7. It's purpose is to achieve maximal compatibility by default.
JFLAGS= -cp $(JYTHON):$(JYNI) -d $(JYNIBIN) -source 1.7 -target 1.7

SOURCES = $(wildcard JyNI-C/src/*.c) $(wildcard JyNI-C/src/Python/*.c) $(wildcard JyNI-C/src/Objects/*.c) $(wildcard JyNI-C/src/Modules/*.c)
OBJECTS = $(SOURCES:.c=.o)
JSOURCES = $(wildcard JyNI-Java/src/JyNI/*.java) $(wildcard JyNI-Java/src/JyNI/gc/*.java)

all: $(OUTPUTDIR) libJyNI libJyNI-Loader JyNI
	@echo ''
	@echo 'Build successful.'

$(OUTPUTDIR):
	mkdir $(OUTPUTDIR)

.o:
	$(CC) $(CFLAGS) $< -o $@

libJyNI: $(OBJECTS)
	$(CC) $(LDFLAGS) $(OBJECTS) -o $(OUTPUTDIR)/libJyNI.so

libJyNI-Loader: ./JyNI-Loader/JyNILoader.o
	$(CC) $(LDFLAGS) ./JyNI-Loader/JyNILoader.o -o $(OUTPUTDIR)/libJyNI-Loader.so

$(JYNIBIN):
	mkdir $(JYNIBIN)

$(JYNIBIN)/JyNI: $(JYNIBIN)
	$(JC) $(JFLAGS) $(JSOURCES)

$(JYNIBIN)/Lib: $(JYNIBIN)
	cp -r JyNI-Lib/* $(JYNIBIN)
	$(JAVA) -cp $(JYTHON) org.python.util.jython -c "import compileall; compileall.compile_dir('$(JYNIBIN)')"

$(JYTHON):
	@echo ''
	@echo '------------------------------------------------'
	@echo 'Fatal error: Could not find jython.jar.'
	@echo 'Either put jython.jar into the JyNI base folder,
	@echo 'or adjust the JYTHON-variable at the top of'
	@echo 'makefile to point to your installed jython.jar.'
	@echo 'Be sure to use Jython 2.7.1 or newer.'
	@echo '------------------------------------------------'
	@echo ''
	@false

JyNI: $(JYTHON) $(JYNIBIN)/JyNI $(JYNIBIN)/Lib
	cp -r JyNI-Java/META-INF $(JYNIBIN)
	jar cvf $(OUTPUTDIR)/JyNI.jar -C $(JYNIBIN) .

cleanJ:
	rm -rf $(JYNIBIN)

clean:
	rm -rf $(JYNIBIN)
	rm -f ./JyNI-C/src/*.o
	rm -f ./JyNI-C/src/Python/*.o
	rm -f ./JyNI-C/src/Objects/*.o
	rm -f ./JyNI-C/src/Modules/*.o
	rm -f ./JyNI-Loader/JyNILoader.o

.PHONY: JyNI libJyNI libJyNI-Loader clean all

